{"version":3,"sources":["reportWebVitals.ts","MkForm.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MkForm","onSubmit","initialValues","name","email","msg","values","alert","handleChange","handleBlur","id","className","TextField","label","fullWidth","required","variant","value","onChange","onBlur","multiline","rows","Button","type","size","color","ReactDOM","render","StrictMode","style","textAlign","fetch","method","headers","body","JSON","stringify","document","getElementById"],"mappings":"wMAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,wCCWDQ,EAA0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtC,OACI,cAAC,IAAD,CACAC,cAAe,CAACC,KAAM,GAAIC,MAAO,GAAIC,IAAK,IAC1CJ,SAAU,SAACK,GACPL,EAASK,GACTC,MAAM,oBAJV,SAMK,gBAAGD,EAAH,EAAGA,OAAQE,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,WAAzB,OACG,eAAC,IAAD,WACI,sBAAKC,GAAG,cAAR,UACI,sBAAKC,UAAU,kBAAf,UACI,cAACC,EAAA,EAAD,CACIT,KAAK,OACLO,GAAG,iBACHG,MAAM,OACNC,WAAS,EACTC,UAAQ,EACRC,QAAQ,WACRC,MAAOX,EAAOH,KACde,SAAUV,EACVW,OAAQV,IAGZ,cAACG,EAAA,EAAD,CACIT,KAAK,QACLW,WAAS,EACTJ,GAAG,iBACHG,MAAM,QACNE,UAAQ,EACRC,QAAQ,WACRC,MAAOX,EAAOF,MACdc,SAAUV,EACVW,OAAQV,OAGhB,qBAAKE,UAAU,kBAAf,SACI,cAACC,EAAA,EAAD,CACIT,KAAK,MACLO,GAAG,iBACHG,MAAM,UACNC,WAAS,EACTM,WAAS,EACTL,UAAQ,EACRM,KAAK,IACLL,QAAQ,WACRC,MAAOX,EAAOD,IACda,SAAUV,EACVW,OAAQV,EACRE,UAAU,uBAKtB,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASC,KAAK,QAAQC,MAAM,YAAYT,QAAQ,YAA7D,2BCnEpBU,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,qBAAKC,MAAO,CAAEC,UAAW,UAAzB,SACE,cAAC,EAAD,CACE7B,SAAU,YAAyB,IAAvBE,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACvB0B,MAAM,iEAAkE,CAACC,OAAQ,OAAQC,QAAS,CAAC,OAAU,mBAAoB,eAAgB,oBAAqBC,KAAMC,KAAKC,UAAU,CAAEjC,OAAME,MAAKD,YACxM2B,MAAM,0EAA2E,CAACC,OAAQ,OAAQC,QAAS,CAAC,OAAU,mBAAoB,eAAgB,oBAAqBC,KAAMC,KAAKC,UAAU,CAAEjC,OAAME,MAAKD,mBAKzNiC,SAASC,eAAe,SAS1B/C,M","file":"static/js/main.47c38520.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Button, TextField } from '@material-ui/core';\nimport { Form, Formik } from 'formik';\nimport * as React from 'react';\nimport './form.css';\nimport { spacing } from '@material-ui/system'\n\n\n\ninterface Values {\n    name: string;\n    email: string;\n    msg: string; // This is not a large enough variable type but for now it'll do.\n}\n\n\ninterface Props {\n    onSubmit: (values: Values) => void; //Values as my parameter\n\n}\n\nexport const MkForm: React.FC<Props> = ({ onSubmit }) => {\n    return (\n        <Formik\n        initialValues={{name: '', email: '', msg: ''}} \n        onSubmit={(values) => {\n            onSubmit(values);\n            alert(\"Form Submitted!\")\n        }}>\n            {({ values, handleChange, handleBlur}) => (\n                <Form>\n                    <div id=\"formWrapper\">\n                        <div className=\"smallTextFields\">\n                            <TextField \n                                name=\"name\" \n                                id=\"outlined-basic\" \n                                label=\"Name\" \n                                fullWidth\n                                required\n                                variant=\"outlined\"\n                                value={values.name}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                />\n                            \n                            <TextField \n                                name=\"email\" \n                                fullWidth\n                                id=\"outlined-basic\" \n                                label=\"Email\"\n                                required\n                                variant=\"outlined\"\n                                value={values.email}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                />\n                        </div>\n                        <div className=\"largeTextFields\">\n                            <TextField \n                                name=\"msg\" \n                                id=\"outlined-basic\" \n                                label=\"Message\" \n                                fullWidth\n                                multiline\n                                required\n                                rows=\"5\"\n                                variant=\"outlined\"\n                                value={values.msg}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className=\"largeBodyText\"\n                                />\n\n                        </div>\n                    </div>\n                    <Button type=\"submit\" size=\"large\" color=\"secondary\" variant='contained'>Submit</Button>\n                </Form>\n            )}\n        </Formik>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport { MkForm } from './MkForm';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <div style={{ textAlign: \"center\" }}>\n      <MkForm\n        onSubmit={({name, email, msg}) => {\n          fetch('https://52vgh03ao6.execute-api.us-west-1.amazonaws.com/Staging', {method: 'POST', headers: {'Accept': 'application/json', 'Content-Type': 'application/json'}, body: JSON.stringify({ name, msg, email })})\n          fetch('https://ek0cvqnnja.execute-api.us-west-1.amazonaws.com/Production/store', {method: 'POST', headers: {'Accept': 'application/json', 'Content-Type': 'application/json'}, body: JSON.stringify({ name, msg, email })})\n        }} />\n    </div>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}